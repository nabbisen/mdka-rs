name: Release Executable

on:
  release:
    types: [created]

permissions:
  contents: read
  # used to sign the release artifacts
  id-token: write

defaults:
  run:
    shell: bash

env:
  PRODUCT_BASENAME: mdka
  TAG: ${{ github.ref_name }}          # tag or branch name
  ARTIFACT_PATH: ${{ github.run_id }}  # unique number

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: Linux-aarch64-musl
            target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            bin_ext: 
          - name: Linux-x64-gnu
            target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            tag: LINUX-x86_64-gnu
            bin_ext: 
          - name: Linux-x64-musl
            target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            bin_ext: 
          - name: macOS-aarch64
            target: aarch64-apple-darwin
            os: macos-latest
            bin_ext: 
          - name: Windows-x64
            target: x86_64-pc-windows-msvc
            os: windows-latest
            bin_ext: .exe

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        run: bash .github/workflows/scripts/install-rust.sh stable ${{ matrix.target }}
      
      - name: Cache cargo registry and build
        uses: actions/cache@v4
        with:
          path: |
            "$HOME/.cargo/registry"
            "$HOME/.cargo/git"
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build Rust executable
        run: |
          cargo build --release --target ${{ matrix.target }} --bin ${PRODUCT_BASENAME} --locked

      - name: Prepare artifacts
        run: |
          ARTIFACT_ROOT_DIR=${PRODUCT_BASENAME}#${{ env.TAG }}
          mkdir -p "${ARTIFACT_PATH}/${ARTIFACT_ROOT_DIR}"
          mv "target/${{ matrix.target }}/release/${PRODUCT_BASENAME}${{ matrix.bin_ext }}" "${ARTIFACT_PATH}/${ARTIFACT_ROOT_DIR}/"
      
      - name: Upload Rust build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PRODUCT_BASENAME }}@${{ matrix.name }}#${{ env.TAG }}
          path: ${{ env.ARTIFACT_PATH }}/*
